/**
 * prgrmr
 *
 * Programmer profile for GitHub projects
 *
 * @author Jason Mulligan <jason.mulligan@avoidwork.com>
 * @copyright 2013 Jason Mulligan
 * @license BSD-3 <https://raw.github.com/avoidwork/prgrmr/master/LICENSE>
 * @link https://github.com/avoidwork/prgrmr
 * @version 0.1.0
 */
(function(e){"use strict";var t,n={blog:{},config:{},events:{},orgs:{},repos:{},version:"0.1.0"},r={events:"https://api.github.com/users/{{user}}/events",orgs:"https://api.github.com/users/{{user}}/orgs",repos:"https://api.github.com/users/{{user}}/repos"},i=function(e){var n=t("#charts");n.removeClass("hidden")},s=function(n){var r=n.message||n;t.log(r,"error"),e.humane.error(r)},o=function(e){var r=t("#events"),s;s=function(e){void 0},n.events.datalist=t.datalist(r,n.events.data,"{{id}}",s),r.removeClass("hidden"),i("events")},u=function(){var i=t("header > h1")[0],u=t("title")[0],a=t("#version"),h=t("article")[0],p;e.humane.error=e.humane.spawn({addnCls:"humane-jackedup-error",timeout:3e3}),a!=="undefined"&&a.html(n.version),p=c(h,"large"),"assets/config.json".get(function(e){if(e.github.isEmpty())throw Error(t.label.error.invalidArguments);n.config=e,i.html(e.name),u.html(e.name)},function(e){throw s(e),e}).then(function(i){t.iterate(r,function(e,t){r[t]=e.replace("{{user}}",i.github)}),t.iterate(n,function(e,n){this[n]=t.data({id:n},null,{key:"id"})}),e.prgrmr=n},function(e){throw s("Configuration is not valid: "+(e.message||e)),e}).then(function(e){n.events.data.setUri(r.events).then(function(e){p.el.destroy(),o(e)},function(e){p.el.destroy(),s(e)}),n.orgs.data.setUri(r.orgs).then(function(e){p.el.destroy(),f(e)},function(e){p.el.destroy(),s(e)}),n.repos.data.setUri(r.repos).then(function(e){p.el.destroy(),l(e)},function(e){p.el.destroy(),s(e)}),n.events.setExpires(300),n.orgs.setExpires(300),n.repos.setExpires(300),e.tumblr.isEmpty()||n.blog.data.setUri(e.tumblr).then(function(e){tumblr(e)},function(e){s(e)})},function(e){s("Could not consume APIs")})},a=function(e,n){n=n===!0,t.log(e),n||humane.log(e)},f=function(e){var r=t("#orgs"),s;s=function(e){void 0},n.orgs.datalist=t.datalist(r,n.orgs.data,"{{id}}",s),r.removeClass("hidden"),i("orgs")},l=function(e){var r=t("#repos"),s;s=function(e){void 0},n.repos.datalist=t.datalist(r,n.repos.data,"{{id}}",s),r.removeClass("hidden"),i("repos")},c=function(e,n){e=t.object(e),n=n||"small";var r,i;i={lines:13,length:5,width:2,radius:5,corners:1,rotate:0,color:"#000",speed:1,trail:70,shadow:!0,hwaccel:!0,className:"spinner",zIndex:2e9,top:"auto",left:"auto"};switch(n){case"small":i.length=4,i.radius=4,i.width=2;break;case"medium":i.length=7,i.radius=7,i.width=3;break;case"large":default:i.length=12,i.radius=12,i.width=3}return r=(new Spinner(i)).spin(e),r},h=function(e,n){var r=t.promise();return utility.defer(function(){var e={};r.resolve(e)}),r};t=e[abaaso.aliased],t.on("render",function(){u()})})(this);